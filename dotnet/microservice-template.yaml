apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: microservice-solution
  title: Microservice Solution
  description: Common Microservice Scaffolder
  tags:
    - recommended
    - coe-arq
    - microservice
    - dotnet
    - webapi
spec:
  owner: user:guest
  type: service
  parameters:
    - title: Provide some simple information about default entrypoint
      required:
        - app_name
        - repoUrl
        - template
      properties:
        app_name:
          title: Identification
          type: string
          description: Application unique name.
          pattern: '^\S*[a-z\-]$'
        repoUrl:
          title: Github Repo
          type: string
          description: Github Repo of new project based on template.
          pattern: '^\S*[a-zA-Z]$'
        template:
          title: Template
          type: string
          description: Archtype.
          enum:
            - webapi
    - title: Select dependencies
      properties:
        enable_postgress:
          title: Enable Postgress integration
          type: boolean
          description: Whether or not to add Postgress dependencies
        enable_mongodb:
          title: Enable MongoDb integration
          type: boolean
          description: Whether or not to add MongoDb dependencies
        enable_redis:
          title: Enable Redis integration
          type: boolean
          description: Whether or not to add MongoDb dependencies
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.app_name }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: ${{ parameters.app_name }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: 'public'

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
